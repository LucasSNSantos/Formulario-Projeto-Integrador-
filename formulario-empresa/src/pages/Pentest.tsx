import { useHistory } from 'react-router-dom'
import { Button } from '../Components/Button';
import { Input } from '../Components/Input';
import '../styles/pentest.scss'
import logopentest from '../assets/images/logopentest.svg'
import chain from '../assets/images/chain.svg'
import relatorio from '../assets/images/relatorio.svg'
import axios from 'axios';
import { Ataque } from '../Api/Ataque';
import { type } from 'os';
import { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

export function Pentest() {
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
    var yyyy = today.getFullYear();

    const DataAtual = mm + '/' + dd + '/' + yyyy;
    let ataque: Ataque = {
        firm: "21937291832",
        data: DataAtual
    };
    const [Ip_1, setIp1] = useState("")
    const [Ip_2, setIp2] = useState("")
    const [Ip_3, setIp3] = useState("")
    const [Ip_4, setIp4] = useState("")
    const [porta, setPorta] = useState("")
    const [data, setData] = useState("")
    const [numEnde, setnumEnde] = useState(0)
    const [method, setMethod] = useState("")


    const handleNumEnde = (event: { target: { value: any; }; }) => {
        setnumEnde(event.target.value)
    }
    const handleData = (event: { target: { value: any; }; }) => {
        setData(event.target.value)
    }
    const handlePorta = (event: { target: { value: any; }; }) => {
        setPorta(event.target.value)
    }
    const handleMethod = (event: { target: { value: any; }; }) => {
        setMethod(event.target.value)
    }

    const handleIp1 = (event: { target: { value: any; }; }) => {
        setIp1(event.target.value)

    }
    const handleIp2 = (event: { target: { value: any; }; }) => {
        setIp2(event.target.value)
    }
    const handleIp3 = (event: { target: { value: any; }; }) => {
        setIp3(event.target.value)
    }
    const handleIp4 = (event: { target: { value: any; }; }) => {
        setIp4(event.target.value)
    }

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        let url = 'http://127.0.0.1:8000/postIpAttack';
        ataque.ip_list?.push(Ip_1)
        ataque.ip_list?.push(Ip_2)
        ataque.ip_list?.push(Ip_3)
        ataque.ip_list?.push(Ip_4)
        ataque.data = data;
        ataque.method = method;
        ataque.ip_invalid_list = []
        ataque.ip_proxy_test_list = []
        console.log(ataque)
        axios.post(url, {
            "firm": "31238123",
            "date": data,
            "ip_list": [Ip_1, Ip_2, Ip_3, Ip_4],
            "method": method,
            "results": "string",
            "ip_invalid_list": [],
            "ip_proxy_test_list": []

        }).then((res) => {
            console.log(res.data)
        }).catch((error) => {
            console.log(error)
        });
    }


    return (
        <div className="container position-relative">
            <div className="py-5 text-center">
                <img src={logopentest} alt="" width="72" height="57" />
                <h2>Teste de Sistema</h2>
                <p className="lead">Simulação de um ataque Real</p>
            </div>

            <div className="row py-5 px-5">
                <div className="col-lg-12">
                    <form onSubmit={handleSubmit}>
                        <div className="row">
                            <div className="col-lg-4 mt-2">
                                <label className="form-label">Numero de Endereços</label>
                                <Input type="number" className="form-control" onChange={handleNumEnde} id="method" placeholder="Nm Endereços" required />
                            </div>
                            <div className="col-lg-4 mt-2">
                                <label className="form-label">Porta</label>
                                <Input type="number" className="form-control" onChange={handlePorta} id="porta" placeholder="Porta" required />
                            </div>
                            <div className="col-lg-4 mt-2">
                                <label className="form-label">Data</label>
                                <Input type="date" className="form-control" onChange={handleData} id="data" placeholder="Data do teste" required />
                            </div>
                            <div className="col-lg-12 mt-2">
                                <label className="form-label">Método</label>
                                <Input type="text" className="form-control" onChange={handleMethod} id="method" placeholder=" Método" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 1</label>
                                <Input type="text" className="form-control" onChange={handleIp1} id="method" placeholder="Endereço IP 1" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 2</label>
                                <Input type="text" className="form-control" onChange={handleIp2} id="method" placeholder="Endereço IP 2" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 3</label>
                                <Input type="text" className="form-control" onChange={handleIp3} id="method" placeholder="Endereço IP 3" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 4</label>
                                <Input type="text" className="form-control" onChange={handleIp4} id="method" placeholder="Endereço IP 4" required />
                            </div>
                        </div>

                    </form>
                </div>
                <div className="col-lg-12">
                    <Button type="submit">
                        Registrar Ataque
                    </Button>
                </div>
            </div>

        </div>
    )
}