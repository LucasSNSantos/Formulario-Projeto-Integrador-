import { Button } from '../Components/Button';
import { Input } from '../Components/Input';
import '../styles/pentest.scss'
import logopentest from '../assets/images/logopentest.svg'
import axios from 'axios';
import { Ataque } from '../Api/Ataque';
import { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import { toast, ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export function Pentest() {
    const notify = () =>{
        toast.error("Erro ao agendar ataque")
    }
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
    var yyyy = today.getFullYear();

    const DataAtual = mm + '/' + dd + '/' + yyyy;
    const firm = '06990590000123';
    const [Ip_1, setIp1] = useState("localhost")
    const [Ip_2, setIp2] = useState("")
    const [Ip_3, setIp3] = useState("")
    const [Ip_4, setIp4] = useState("")
    const [Processos, setProcessos] = useState(3)
    const [data, setData] = useState("")
    const [Requisicoes, setRequisicoes] = useState(500)
    const [Porta, setPorta] = useState(0)


    const handleRequisicoes = (event: { target: { value: any; }; }) => {
        setRequisicoes(parseInt(event.target.value))
    }
    const handleData = (event: { target: { value: any; }; }) => {
        setData(event.target.value)
    }
    const handleProcessos = (event: { target: { value: any; }; }) => {
        setProcessos(parseInt(event.target.value))
    }

    const handlePorta = (event: { target: { value: any; }; }) => {
        setPorta(parseInt(event.target.value))
    }
    const handleIp1 = (event: { target: { value: any; }; }) => {
        setIp1(event.target.value)

    }
    const handleIp2 = (event: { target: { value: any; }; }) => {
        setIp2(event.target.value)
    }
    const handleIp3 = (event: { target: { value: any; }; }) => {
        setIp3(event.target.value)
    }
    const handleIp4 = (event: { target: { value: any; }; }) => {
        setIp4(event.target.value)
    }

    const handleSubmit = (event: { preventDefault: () => void; }) => {
        event.preventDefault();
        let url = 'http://127.0.0.1:8000/postIpAttack/';
        const listaIps  = []
        if(Ip_1 != "")
        {
            listaIps.push(Ip_1)
        }
        if(Ip_2 != "")
        {
            listaIps.push(Ip_2)
        }
        if(Ip_3 != "")
        {
            listaIps.push(Ip_3)
        }
        if(Ip_4 != "")
        {
            listaIps.push(Ip_4)
        }
        axios.post(url,
            {
                "firm": firm,
                "date": data,
                "listIp": listaIps,
                "port": Porta,
                "numReq": Requisicoes,
                "numProcess": Processos,
                "process": []
            }
            ).then((res) => {
            console.log(res.data)
        }).catch((error) => {
            console.log(error)
            notify();
        });
    }


    return (
        <div className="container position-relative">
            <div className="py-5 text-center">
                <img src={logopentest} alt="" width="72" height="57" />
                <h2>Teste de Sistema</h2>
                <p className="lead">Simulação de um ataque Real</p>
            </div>
            <div>
                <ToastContainer />
            </div>
            <div className="row py-5 px-5">
                <div className="col-lg-12">
                    <form onSubmit={handleSubmit}>
                        <div className="row">
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Numero de Requisições</label>
                                <div className="input-group" >
                                    <select className="form-control" onChange={handleRequisicoes}>
                                        <option value="500">500 Req/seg</option>
                                        <option value="1000">1000  Req/seg</option>
                                        <option value="4000">4000  Req/seg</option>
                                    </select>
                                </div>
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Número de Processos</label>
                                <div className="input-group">
                                    <select className="form-control" onChange={handleProcessos}>
                                        <option value="3">3 Processos</option>
                                        <option value="5">5 Processos</option>
                                        <option value="8">8 Processos</option>
                                    </select>
                                </div>
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Data</label>
                                <Input type="date" className="form-control" onChange={handleData} id="data" placeholder="Data do teste" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Porta</label>
                                <Input type="number" className="form-control" onChange={handlePorta} id="porta" placeholder="Porta" required />
                            </div>

                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 1</label>
                                <Input type="text" className="form-control" onChange={handleIp1} id="method" placeholder="Endereço IP 1" required />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 2</label>
                                <Input type="text" className="form-control" onChange={handleIp2} id="method" placeholder="Endereço IP 2"  />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 3</label>
                                <Input type="text" className="form-control" onChange={handleIp3} id="method" placeholder="Endereço IP 3"  />
                            </div>
                            <div className="col-lg-3 mt-2">
                                <label className="form-label">Endereço IP 4</label>
                                <Input type="text" className="form-control" onChange={handleIp4} id="method" placeholder="Endereço IP 4"  />
                            </div>
                        </div>
                        <div className="col-lg-12 d-flex justify-content-center">
                            <Button type="submit">
                                Agendar
                            </Button>
                        </div>
                    </form>
                </div>

            </div>

        </div>
    )
}